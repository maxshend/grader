version: '3.4'

x-common-variables: &common-variables
  DATABASE_URL: postgresql://postgres:password@postgres/grader?sslmode=disable
  RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672/
  RABBITMQ_QUEUE: assignments_handling

services:
  web:
    build:
      context: ../
      dockerfile: ./build/grader_web/Dockerfile.dev
    container_name: grader_web
    ports:
      - 8080:8080
    restart: unless-stopped
    depends_on:
      - postgres
      - rabbitmq
      - worker
    environment:
      <<: *common-variables
      CGO_ENABLED: 0
      APP_ENV: development
      HOST: http://web:8080/
    volumes:
      - upload_data:/app/uploads
    networks:
      - backend

  worker:
    build:
      context: ../
      dockerfile: ./build/grader_worker/Dockerfile.dev
    container_name: grader_worker
    ports:
      - 8081:8080
    restart: unless-stopped
    depends_on:
      - rabbitmq
    environment:
      <<: *common-variables
      CGO_ENABLED: 0
      APP_ENV: development
    networks:
      - backend

  runner:
    build:
      context: ../
      dockerfile: ./build/grader_runner/Dockerfile.dev
    container_name: grader_runner
    privileged: true
    ports:
      - 8021:8021
    restart: unless-stopped
    depends_on:
      - web
    environment:
      CGO_ENABLED: 0
      APP_ENV: development
    networks:
      - backend

  postgres:
    image: postgres:alpine
    container_name: grader_postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=grader
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - ../scripts/init_postgres.sql:/docker-entrypoint-initdb.d/db.sql
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend

  rabbitmq:
    image: rabbitmq:3-alpine
    container_name: grader_rabbitmq
    ports:
      - 5672:5672
    networks:
      - backend

networks:
  backend:

volumes:
  postgres_data:
  upload_data:
